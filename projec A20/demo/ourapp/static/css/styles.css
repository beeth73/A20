/* Total Deconstruction Design */
:root {
    --asymmetry-red: #FF4136;
    --chaos-yellow: #FFDC00;
    --disrupt-blue: #0074D9;
    --organic-green: #2ECC40;
    --raw-texture: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23dddddd' fill-opacity='0.4'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Chakra Petch', monospace;
    background: 
        linear-gradient(45deg, #000 0%, #111 100%), 
        var(--raw-texture);
    color: #fff;
    line-height: 1.6;
    overflow-x: hidden;
    perspective: 1000px;
}

.cultura-interface {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    background: rgba(0,0,0,0.8);
    transform-style: preserve-3d;
    transform: rotateX(10deg) scale(0.9);
}

.fractured-header {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    gap: 10px;
    background: linear-gradient(
        135deg, 
        var(--asymmetry-red), 
        var(--disrupt-blue)
    );
    padding: 20px;
    clip-path: polygon(
        0% 20%, 
        100% 0%, 
        100% 80%, 
        0% 100%
    );
    transform: skew(-5deg);
}

.logo-fragment {
    font-size: 2rem;
    text-transform: uppercase;
    letter-spacing: 5px;
    font-weight: 900;
    background: linear-gradient(
        to right, 
        var(--chaos-yellow), 
        var(--organic-green)
    );
    -webkit-background-clip: text;
    color: transparent;
    transform: rotate(random(-10, 10)deg);
    transition: all 0.3s ease-in-out;
}

.navigation-chaos {
    display: flex;
    justify-content: space-around;
    transform: rotate(random(-5, 5)deg);
}

.nav-disrupt {
    position: relative;
    padding: 10px 20px;
    text-decoration: none;
    color: white;
    overflow: hidden;
    border: 2px solid transparent;
    transition: all 0.4s ease;
}

.nav-disrupt::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        120deg, 
        transparent, 
        rgba(255,255,255,0.2), 
        transparent
    );
    transition: 0.5s;
}

.nav-disrupt:hover::before {
    left: 100%;
}

.calendar-deconstruction {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    padding: 20px;
    transform: rotate(random(-3, 3)deg);
}

.month-fragment {
    background: linear-gradient(
        45deg, 
        var(--disrupt-blue), 
        var(--organic-green)
    );
    border-radius: 10px;
    padding: 15px;
    transform-style: preserve-3d;
    transform: 
        perspective(500px)
        rotateX(random(-15, 15)deg)
        rotateY(random(-15, 15)deg)
        translateZ(random(20, 50)px);
    transition: all 0.5s ease;
}

.day-chaos {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 5px;
    perspective: 600px;
}

.day-cell {
    background: linear-gradient(
        135deg, 
        var(--asymmetry-red), 
        var(--chaos-yellow)
    );
    aspect-ratio: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    transform: 
        rotateX(random(-20, 20)deg)
        rotateY(random(-20, 20)deg)
        scale(random(0.8, 1.2));
    transition: all 0.4s ease;
    opacity: 0.8;
}

.day-cell:hover {
    transform: 
        rotateX(0)
        rotateY(0)
        scale(1.2);
    opacity: 1;
    z-index: 10;
}

.action-disruption {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 40px;
    transform: rotate(random(-5, 5)deg);
}

.cultura-button {
    padding: 15px 30px;
    background: linear-gradient(
        to right, 
        var(--disrupt-blue), 
        var(--organic-green)
    );
    color: white;
    text-transform: uppercase;
    letter-spacing: 3px;
    border: none;
    transform: 
        perspective(500px)
        rotateX(random(-15, 15)deg);
    transition: all 0.4s ease;
}

.cultura-button:hover {
    transform: 
        perspective(500px)
        rotateX(0)
        scale(1.1);
}

@media (max-width: 768px) {
    .cultura-interface {
        transform: none;
    }
}

/* Experimental Random Rotation Function */
@function random($min, $max) {
    @return ($min + ($max - $min) * random());
}